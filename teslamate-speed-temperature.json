{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": 33,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 20,
      "title": "Speed and temperature related metrics",
      "type": "row"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "PC98BA2F4D77E1A42"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "center",
            "cellOptions": {
              "mode": "basic",
              "type": "color-background"
            },
            "inspect": false,
            "width": 70
          },
          "decimals": 1,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "transparent",
                "value": null
              },
              {
                "color": "#399e2f",
                "value": 5
              },
              {
                "color": "#4d9e28",
                "value": 11
              },
              {
                "color": "#5d9e21",
                "value": 12
              },
              {
                "color": "#6b9d1a",
                "value": 13
              },
              {
                "color": "#799d15",
                "value": 14
              },
              {
                "color": "#859c12",
                "value": 15
              },
              {
                "color": "#919a10",
                "value": 16
              },
              {
                "color": "#9c9a12",
                "value": 17
              },
              {
                "color": "#a08b00",
                "value": 18
              },
              {
                "color": "#a27c00",
                "value": 19
              },
              {
                "color": "#a46c00",
                "value": 20
              },
              {
                "color": "#a45c00",
                "value": 21
              },
              {
                "color": "#a34b00",
                "value": 22
              },
              {
                "color": "#a13908",
                "value": 23
              },
              {
                "color": "#9d2312",
                "value": 24
              },
              {
                "color": "#9d0223",
                "value": 26
              },
              {
                "color": "#990032",
                "value": 28
              },
              {
                "color": "#8f003f",
                "value": 32
              },
              {
                "color": "#85004a",
                "value": 40
              },
              {
                "color": "#7a0056",
                "value": 50
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "speed\\temperature"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 199
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "speed\\temperature"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "transparent",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "speed\\temperature"
            },
            "properties": [
              {
                "id": "unit",
                "value": "velocitykmh"
              },
              {
                "id": "decimals",
                "value": 0
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 13,
        "w": 12,
        "x": 0,
        "y": 1
      },
      "id": 7,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "last"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": [
          {
            "desc": true,
            "displayName": "speed\\temperature"
          }
        ]
      },
      "pluginVersion": "10.1.2",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "PC98BA2F4D77E1A42"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "SELECT speed, temperature, ROUND(avg((power/speed)*100), 1) as consumption, COUNT(*) AS samples FROM (\n  SELECT \n    ROUND(AVG(speed/10.0) OVER(ORDER BY date ROWS BETWEEN 3 PRECEDING AND 3 FOLLOWING))*10 AS speed,\n    ROUND(AVG(outside_temp/5.0) OVER(ORDER BY date ROWS BETWEEN 3 PRECEDING AND 3 FOLLOWING))*5 AS temperature,\n    AVG(power) OVER(ORDER BY date ROWS BETWEEN 3 PRECEDING AND 3 FOLLOWING) AS power\n  FROM \n    positions WHERE car_id = $car_id AND speed > 0 AND outside_temp IS NOT NULL\n) S1 GROUP BY temperature, speed having speed > 0 AND count(*) > 10 ORDER BY temperature DESC\n",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Consumption at speed and temperature",
      "transformations": [
        {
          "id": "groupingToMatrix",
          "options": {
            "columnField": "temperature",
            "emptyValue": "null",
            "rowField": "speed",
            "valueField": "consumption"
          }
        },
        {
          "id": "convertFieldType",
          "options": {
            "conversions": [
              {
                "destinationType": "number",
                "targetField": "speed\\temperature"
              }
            ],
            "fields": {}
          }
        }
      ],
      "type": "table"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "PC98BA2F4D77E1A42"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "center",
            "cellOptions": {
              "mode": "basic",
              "type": "color-background"
            },
            "filterable": false,
            "inspect": false,
            "width": 70
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "transparent",
                "value": null
              },
              {
                "color": "#7a0056",
                "value": 10
              },
              {
                "color": "#85004a",
                "value": 140
              },
              {
                "color": "#8f003f",
                "value": 175
              },
              {
                "color": "#990032",
                "value": 200
              },
              {
                "color": "#9d0223",
                "value": 215
              },
              {
                "color": "#9d2312",
                "value": 230
              },
              {
                "color": "#a13908",
                "value": 245
              },
              {
                "color": "#a34b00",
                "value": 255
              },
              {
                "color": "#a45c00",
                "value": 265
              },
              {
                "color": "#a46c00",
                "value": 280
              },
              {
                "color": "#a27c00",
                "value": 295
              },
              {
                "color": "#a08b00",
                "value": 310
              },
              {
                "color": "#9c9a12",
                "value": 330
              },
              {
                "color": "#919a10",
                "value": 350
              },
              {
                "color": "#859c12",
                "value": 370
              },
              {
                "color": "#799d15",
                "value": 400
              },
              {
                "color": "#6b9d1a",
                "value": 430
              },
              {
                "color": "#5d9e21",
                "value": 470
              },
              {
                "color": "#4d9e28",
                "value": 510
              },
              {
                "color": "#399e2f",
                "value": 1000
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "speed\\temperature"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 199
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "speed\\temperature"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "transparent",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "speed\\temperature"
            },
            "properties": [
              {
                "id": "unit",
                "value": "velocitykmh"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 13,
        "w": 12,
        "x": 12,
        "y": 1
      },
      "id": 15,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "last"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": [
          {
            "desc": true,
            "displayName": "speed\\temperature"
          }
        ]
      },
      "pluginVersion": "10.1.2",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "PC98BA2F4D77E1A42"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "SELECT \n  speed, temperature, COUNT(*) as samples,\n  (100*('$aux'::json -> 'CurrentCapacity')::text::float/ROUND(AVG((power/speed)*100), 1)) AS range\nFROM (\n  SELECT \n    ROUND(AVG(speed/10.0) OVER(ORDER BY date ROWS BETWEEN 3 PRECEDING AND 3 FOLLOWING))*10 AS speed,\n    ROUND(AVG(outside_temp/5.0) OVER(ORDER BY date ROWS BETWEEN 3 PRECEDING AND 3 FOLLOWING))*5 AS temperature,\n    AVG(power) OVER(ORDER BY date ROWS BETWEEN 3 PRECEDING AND 3 FOLLOWING) AS power\n  FROM \n    positions WHERE car_id = $car_id AND speed > 0 AND outside_temp IS NOT NULL\n) S1 GROUP BY temperature, speed having speed > 0 AND count(*) > 10 ORDER BY temperature DESC\n",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Range at speed and temperature",
      "transformations": [
        {
          "id": "groupingToMatrix",
          "options": {
            "columnField": "temperature",
            "emptyValue": "null",
            "rowField": "speed",
            "valueField": "range"
          }
        },
        {
          "id": "convertFieldType",
          "options": {
            "conversions": [
              {
                "destinationType": "number",
                "targetField": "speed\\temperature"
              }
            ],
            "fields": {}
          }
        }
      ],
      "type": "table"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 14
      },
      "id": 18,
      "panels": [],
      "title": "Temperature related statistics",
      "type": "row"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "PC98BA2F4D77E1A42"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "fillOpacity": 100,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineWidth": 0,
            "scaleDistribution": {
              "type": "linear"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "decimals": 0,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "#5747ff",
                "value": null
              },
              {
                "color": "#3a63fe",
                "value": -25
              },
              {
                "color": "#2c77f6",
                "value": -20
              },
              {
                "color": "#3b88e9",
                "value": -15
              },
              {
                "color": "#5696da",
                "value": -10
              },
              {
                "color": "#76a1c9",
                "value": -5
              },
              {
                "color": "#9facb0",
                "value": 0
              },
              {
                "color": "#c3b584",
                "value": 5
              },
              {
                "color": "#c09945",
                "value": 10
              },
              {
                "color": "#bd8533",
                "value": 15
              },
              {
                "color": "#bb7025",
                "value": 20
              },
              {
                "color": "#b8591b",
                "value": 25
              },
              {
                "color": "#b53f18",
                "value": 30
              },
              {
                "color": "#b01919",
                "value": 35
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "percentage"
            },
            "properties": [
              {
                "id": "unit",
                "value": "percent"
              },
              {
                "id": "decimals",
                "value": 1
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "temperature"
            },
            "properties": [
              {
                "id": "unit",
                "value": "celsius"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 10,
        "w": 8,
        "x": 0,
        "y": 15
      },
      "id": 14,
      "options": {
        "barRadius": 0.1,
        "barWidth": 0.7,
        "colorByField": "temperature",
        "fullHighlight": false,
        "groupWidth": 0.7,
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "orientation": "auto",
        "showValue": "never",
        "stacking": "none",
        "text": {
          "valueSize": 23
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        },
        "xField": "temperature",
        "xTickLabelRotation": -45,
        "xTickLabelSpacing": 0
      },
      "pluginVersion": "10.1.2",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "PC98BA2F4D77E1A42"
          },
          "editorMode": "code",
          "format": "table",
          "hide": false,
          "rawQuery": true,
          "rawSql": "WITH temperature_samples AS (\n  SELECT temperature, COUNT(*) AS samples, SUM(speed) AS weighted_samples FROM (\n    SELECT \n      ROUND(AVG(outside_temp/5.0) OVER(ORDER BY date ROWS BETWEEN 3 PRECEDING AND 3 FOLLOWING))*5.0 AS temperature,\n      ROUND(AVG(speed) OVER(ORDER BY date ROWS BETWEEN 3 PRECEDING AND 3 FOLLOWING)) AS speed\n    FROM \n      positions WHERE car_id = $car_id AND speed >= 1 AND outside_temp IS NOT NULL\n  ) S1 GROUP BY temperature ORDER BY temperature ASC\n)\nSELECT \n  temperature as temperature, \n  ROUND(100*weighted_samples/(SELECT SUM(weighted_samples) FROM temperature_samples), 1) AS Percentage \nFROM temperature_samples WHERE samples > 100",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Percentage of kilometers driven at temperature",
      "transformations": [],
      "type": "barchart"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "PC98BA2F4D77E1A42"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "axisSoftMax": 30,
            "fillOpacity": 100,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineWidth": 0,
            "scaleDistribution": {
              "type": "linear"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "decimals": 1,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "#5747ff",
                "value": null
              },
              {
                "color": "#3a63fe",
                "value": -25
              },
              {
                "color": "#2c77f6",
                "value": -20
              },
              {
                "color": "#3b88e9",
                "value": -15
              },
              {
                "color": "#5696da",
                "value": -10
              },
              {
                "color": "#76a1c9",
                "value": -5
              },
              {
                "color": "#9facb0",
                "value": 0
              },
              {
                "color": "#c3b584",
                "value": 5
              },
              {
                "color": "#c09945",
                "value": 10
              },
              {
                "color": "#bd8533",
                "value": 15
              },
              {
                "color": "#bb7025",
                "value": 20
              },
              {
                "color": "#b8591b",
                "value": 25
              },
              {
                "color": "#b53f18",
                "value": 30
              },
              {
                "color": "#b01919",
                "value": 35
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "temperature"
            },
            "properties": [
              {
                "id": "unit",
                "value": "celsius"
              },
              {
                "id": "decimals",
                "value": 0
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "consumption"
            },
            "properties": [
              {
                "id": "unit",
                "value": "kwatth"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 10,
        "w": 8,
        "x": 8,
        "y": 15
      },
      "id": 16,
      "options": {
        "barRadius": 0.1,
        "barWidth": 0.7,
        "colorByField": "temperature",
        "fullHighlight": false,
        "groupWidth": 0.7,
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "orientation": "auto",
        "showValue": "never",
        "stacking": "none",
        "text": {
          "valueSize": 23
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        },
        "xField": "temperature",
        "xTickLabelRotation": -45,
        "xTickLabelSpacing": 0
      },
      "pluginVersion": "10.1.2",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "PC98BA2F4D77E1A42"
          },
          "editorMode": "code",
          "format": "table",
          "hide": false,
          "rawQuery": true,
          "rawSql": "WITH speed_temperature AS (\n  SELECT speed, temperature, ROUND(AVG((power/speed)*100), 1) AS consumption, COUNT(*) AS samples FROM (\n    SELECT \n      ROUND(AVG(speed/10.0) OVER(ORDER BY date ROWS BETWEEN 3 PRECEDING AND 3 FOLLOWING))*10 AS speed,\n      ROUND(AVG(outside_temp/5.0) OVER(ORDER BY date ROWS BETWEEN 3 PRECEDING AND 3 FOLLOWING))*5 AS temperature,\n      AVG(power) OVER(ORDER BY date ROWS BETWEEN 3 PRECEDING AND 3 FOLLOWING) AS power\n    FROM \n      positions WHERE car_id = $car_id AND speed > 0 AND outside_temp > -50\n  ) S1 GROUP BY temperature, speed HAVING speed > 1 ORDER BY speed, temperature\n)\n\nSELECT temperature, ROUND(SUM(consumption_samples)/SUM(samples), 1) AS consumption FROM (\n  SELECT \n    speed,\n    temperature,\n    (speed * consumption * samples) AS consumption_samples,\n    samples * speed AS samples\n  FROM speed_temperature WHERE samples > 10\n) S2 GROUP BY temperature ORDER BY temperature ASC\n",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Consumption at temperature",
      "transformations": [],
      "type": "barchart"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "PC98BA2F4D77E1A42"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "#37872D",
            "mode": "thresholds"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "fillOpacity": 100,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineWidth": 0,
            "scaleDistribution": {
              "type": "linear"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "decimals": 0,
          "mappings": [],
          "max": 500,
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "#5747ff",
                "value": null
              },
              {
                "color": "#3a63fe",
                "value": -25
              },
              {
                "color": "#2c77f6",
                "value": -20
              },
              {
                "color": "#3b88e9",
                "value": -15
              },
              {
                "color": "#5696da",
                "value": -10
              },
              {
                "color": "#76a1c9",
                "value": -5
              },
              {
                "color": "#9facb0",
                "value": 0
              },
              {
                "color": "#c3b584",
                "value": 5
              },
              {
                "color": "#c09945",
                "value": 10
              },
              {
                "color": "#bd8533",
                "value": 15
              },
              {
                "color": "#bb7025",
                "value": 20
              },
              {
                "color": "#b8591b",
                "value": 25
              },
              {
                "color": "#b53f18",
                "value": 30
              },
              {
                "color": "#b01919",
                "value": 35
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "range"
            },
            "properties": [
              {
                "id": "unit",
                "value": "lengthkm"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "temperature"
            },
            "properties": [
              {
                "id": "unit",
                "value": "celsius"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 10,
        "w": 8,
        "x": 16,
        "y": 15
      },
      "id": 22,
      "options": {
        "barRadius": 0.1,
        "barWidth": 0.7,
        "colorByField": "temperature",
        "fullHighlight": false,
        "groupWidth": 0.7,
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "orientation": "auto",
        "showValue": "never",
        "stacking": "none",
        "text": {
          "valueSize": 23
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        },
        "xField": "temperature",
        "xTickLabelRotation": -45,
        "xTickLabelSpacing": 0
      },
      "pluginVersion": "10.1.2",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "PC98BA2F4D77E1A42"
          },
          "editorMode": "code",
          "format": "table",
          "hide": false,
          "rawQuery": true,
          "rawSql": "WITH speed_temperature AS (\n  SELECT speed, temperature, ROUND(AVG((power/speed)*100), 1) as consumption, COUNT(*) AS samples FROM (\n    SELECT \n      ROUND(AVG(speed/10.0) OVER(ORDER BY date ROWS BETWEEN 3 PRECEDING AND 3 FOLLOWING))*10 AS speed,\n      ROUND(AVG(outside_temp/5.0) OVER(ORDER BY date ROWS BETWEEN 3 PRECEDING AND 3 FOLLOWING))*5 AS temperature,\n      AVG(power) OVER(ORDER BY date ROWS BETWEEN 3 PRECEDING AND 3 FOLLOWING) AS power\n    FROM \n      positions WHERE car_id = $car_id AND speed > 0 AND outside_temp > -50\n  ) S1 GROUP BY temperature, speed HAVING speed > 1 ORDER BY speed, temperature\n)\n\nSELECT temperature, ROUND(100*('$aux'::json -> 'CurrentCapacity')::text::float/consumption) AS range FROM (\n  SELECT temperature, ROUND(SUM(consumption_samples)/SUM(samples), 1) AS consumption FROM (\n    SELECT \n      speed,\n      temperature,\n      (speed * consumption * samples) AS consumption_samples,\n      samples * speed AS samples\n    FROM speed_temperature WHERE samples > 10\n  ) S2 GROUP by temperature\n) S3 ORDER BY temperature ASC\n",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Range at temperature",
      "transformations": [
        {
          "id": "convertFieldType",
          "options": {
            "conversions": [],
            "fields": {}
          }
        }
      ],
      "type": "barchart"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 25
      },
      "id": 19,
      "panels": [],
      "title": "Speed related statistics",
      "type": "row"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "PC98BA2F4D77E1A42"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "center",
            "cellOptions": {
              "mode": "basic",
              "type": "color-background"
            },
            "inspect": false,
            "width": 70
          },
          "decimals": 2,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "#303036"
              },
              {
                "color": "#333348",
                "value": 0.1
              },
              {
                "color": "#35365b",
                "value": 0.2
              },
              {
                "color": "#37386e",
                "value": 0.3
              },
              {
                "color": "#393a81",
                "value": 1
              },
              {
                "color": "#3b3c95",
                "value": 1.25
              },
              {
                "color": "#3e3da8",
                "value": 1.5
              },
              {
                "color": "#413ebb",
                "value": 1.75
              },
              {
                "color": "#463ecf",
                "value": 2
              },
              {
                "color": "#4d3de2",
                "value": 2.25
              },
              {
                "color": "#583de2",
                "value": 2.5
              },
              {
                "color": "#623de2",
                "value": 2.75
              },
              {
                "color": "#6b3de3",
                "value": 3
              },
              {
                "color": "#743ce3",
                "value": 3.25
              },
              {
                "color": "#7c3ce3",
                "value": 3.5
              },
              {
                "color": "#833ce3",
                "value": 3.75
              },
              {
                "color": "#8b3ce2",
                "value": 4
              },
              {
                "color": "#923ce2",
                "value": 4.25
              },
              {
                "color": "#993ce2",
                "value": 4.5
              },
              {
                "color": "#a440e1",
                "value": 5
              },
              {
                "color": "#af45e1",
                "value": 5.5
              },
              {
                "color": "#b94ae1",
                "value": 6
              },
              {
                "color": "#c350e0",
                "value": 7
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "speed\\temperature"
            },
            "properties": [
              {
                "id": "custom.width",
                "value": 199
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "speed\\temperature"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "transparent",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "speed\\temperature"
            },
            "properties": [
              {
                "id": "unit",
                "value": "velocitykmh"
              },
              {
                "id": "decimals",
                "value": 0
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 16,
        "w": 12,
        "x": 0,
        "y": 26
      },
      "id": 24,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "fields": "",
          "reducer": [
            "last"
          ],
          "show": false
        },
        "showHeader": true,
        "sortBy": [
          {
            "desc": true,
            "displayName": "speed\\temperature"
          }
        ]
      },
      "pluginVersion": "10.1.2",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "PC98BA2F4D77E1A42"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "SELECT \n  speed, temperature, \n  ROUND(\n    100.0*SUM(speed)/\n    (SELECT SUM(speed) FROM positions WHERE speed > 0 AND outside_temp IS NOT NULL AND car_id = $car_id)\n    , 2\n  ) AS samples \nFROM (\n  SELECT \n    ROUND(AVG(speed/10.0) OVER(ORDER BY date ROWS BETWEEN 3 PRECEDING AND 3 FOLLOWING))*10 AS speed,\n    ROUND(AVG(outside_temp/5.0) OVER(ORDER BY date ROWS BETWEEN 3 PRECEDING AND 3 FOLLOWING))*5 AS temperature\n  FROM \n    positions WHERE car_id = $car_id AND speed > 0 AND outside_temp IS NOT NULL\n) S1 GROUP BY temperature, speed having speed > 0 AND count(*) > 10 ORDER BY temperature DESC\n",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Percentage of kilometers driven at speed and temperature",
      "transformations": [
        {
          "id": "groupingToMatrix",
          "options": {
            "columnField": "temperature",
            "emptyValue": "null",
            "rowField": "speed",
            "valueField": "samples"
          }
        },
        {
          "id": "convertFieldType",
          "options": {
            "conversions": [
              {
                "destinationType": "number",
                "targetField": "speed\\temperature"
              }
            ],
            "fields": {}
          }
        }
      ],
      "type": "table"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "PC98BA2F4D77E1A42"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "continuous-GrYlRd"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "axisSoftMax": 6,
            "fillOpacity": 100,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineWidth": 0,
            "scaleDistribution": {
              "type": "linear"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "decimals": 1,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "speed"
            },
            "properties": [
              {
                "id": "unit",
                "value": "velocitykmh"
              },
              {
                "id": "decimals",
                "value": 0
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "consumption"
            },
            "properties": [
              {
                "id": "unit",
                "value": "kwatth"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 26
      },
      "id": 17,
      "options": {
        "barRadius": 0.1,
        "barWidth": 0.7,
        "colorByField": "speed",
        "fullHighlight": false,
        "groupWidth": 0.7,
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "orientation": "vertical",
        "showValue": "never",
        "stacking": "none",
        "text": {
          "valueSize": 23
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        },
        "xField": "speed",
        "xTickLabelRotation": -45,
        "xTickLabelSpacing": 0
      },
      "pluginVersion": "10.1.2",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "PC98BA2F4D77E1A42"
          },
          "editorMode": "code",
          "format": "table",
          "hide": false,
          "rawQuery": true,
          "rawSql": "WITH speed_temperature AS (\n  SELECT speed AS speed, ROUND(AVG((power/speed)*100), 1) AS consumption, count(*) AS samples FROM (\n    SELECT \n      ROUND(AVG(speed/10.0) OVER(ORDER BY date ROWS BETWEEN 3 PRECEDING AND 3 FOLLOWING))*10 AS speed,\n      AVG(power) OVER(ORDER BY date ROWS BETWEEN 3 PRECEDING AND 3 FOLLOWING) AS power\n    FROM \n      positions WHERE car_id = $car_id AND $__timeFilter(date) AND speed >= 15 AND outside_temp > -50\n  ) S1 GROUP BY speed HAVING speed > 0 ORDER BY speed\n)\n\nSELECT speed, round(sum(consumption_samples)/sum(samples), 1) AS consumption FROM (\n  SELECT \n    speed,\n    (speed * consumption * samples) AS consumption_samples,\n    samples * speed AS samples\n  FROM speed_temperature WHERE samples > 10\n) S2 GROUP BY speed ORDER BY speed ASC\n",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Consumption at speed (filterable)",
      "transformations": [],
      "type": "barchart"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "PC98BA2F4D77E1A42"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "continuous-GrYlRd"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "fillOpacity": 80,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineWidth": 1,
            "scaleDistribution": {
              "type": "linear"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "decimals": 1,
          "mappings": [],
          "noValue": "0",
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              }
            ]
          },
          "unit": "none"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "speed"
            },
            "properties": [
              {
                "id": "unit",
                "value": "velocitykmh"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "percentage"
            },
            "properties": [
              {
                "id": "unit",
                "value": "percent"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 34
      },
      "id": 11,
      "options": {
        "barRadius": 0.1,
        "barWidth": 0.7,
        "colorByField": "speed",
        "fullHighlight": false,
        "groupWidth": 0.7,
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "orientation": "auto",
        "showValue": "never",
        "stacking": "none",
        "text": {
          "valueSize": 22
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        },
        "xField": "speed",
        "xTickLabelRotation": -45,
        "xTickLabelSpacing": 0
      },
      "pluginVersion": "10.1.2",
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "PC98BA2F4D77E1A42"
          },
          "editorMode": "code",
          "format": "table",
          "hide": false,
          "rawQuery": true,
          "rawSql": "WITH speed_samples AS (\n  SELECT speed, COUNT(*) AS samples, speed*COUNT(*) AS weighted_samples FROM (\n    SELECT \n      ROUND(AVG(speed/10.0) OVER(ORDER BY date ROWS BETWEEN 3 PRECEDING AND 3 FOLLOWING))*10 AS speed\n    FROM \n      positions WHERE car_id = $car_id AND $__timeFilter(date) AND speed >= 15 \n  ) S GROUP BY speed ORDER BY speed ASC\n)\n\nSELECT \n  speed::text, \n  ROUND(100*weighted_samples/(SELECT SUM(weighted_samples) FROM speed_samples), 1) AS Percentage \nFROM speed_samples WHERE samples > 10",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Percentage of kilometers driven at speed (filterable)",
      "transformations": [],
      "type": "barchart"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 42
      },
      "id": 21,
      "panels": [],
      "title": "Other statistics",
      "type": "row"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "PC98BA2F4D77E1A42"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "axisSoftMin": 0,
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "pointSize": {
              "fixed": 5
            },
            "scaleDistribution": {
              "type": "linear"
            },
            "show": "lines"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "consumption"
            },
            "properties": [
              {
                "id": "unit",
                "value": "kwatth"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "temperature"
            },
            "properties": [
              {
                "id": "unit",
                "value": "celsius"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "temperature2"
            },
            "properties": [
              {
                "id": "unit",
                "value": "celsius"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "consumption2"
            },
            "properties": [
              {
                "id": "unit",
                "value": "kwatth"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "temperature3"
            },
            "properties": [
              {
                "id": "unit",
                "value": "celsius"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "consumption3"
            },
            "properties": [
              {
                "id": "unit",
                "value": "kwatth"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 13,
        "w": 9,
        "x": 0,
        "y": 43
      },
      "id": 9,
      "options": {
        "dims": {
          "frame": 0
        },
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "series": [
          {
            "name": "Under 10 km",
            "pointColor": {
              "fixed": "dark-green"
            },
            "pointSize": {
              "fixed": 50.5,
              "max": 100,
              "min": 1
            },
            "x": "temperature",
            "y": "consumption"
          },
          {
            "name": "10 - 40 km",
            "pointColor": {
              "fixed": "yellow"
            },
            "x": "temperature2",
            "y": "consumption2"
          },
          {
            "name": "Over 40 km",
            "pointColor": {
              "fixed": "dark-orange"
            },
            "x": "temperature3",
            "y": "consumption3"
          }
        ],
        "seriesMapping": "manual",
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "PC98BA2F4D77E1A42"
          },
          "editorMode": "code",
          "format": "table",
          "hide": false,
          "rawQuery": true,
          "rawSql": "SELECT \n  temperature, AVG(consumption) AS consumption\nFROM (\n  SELECT \n    ROUND(outside_temp_avg/3.0) * 3 AS temperature, \n    (NULLIF(GREATEST(start_rated_range_km - end_rated_range_km, 0), 0)*cars.efficiency * (100/distance)) AS consumption\n  FROM \n    drives JOIN cars ON drives.car_id = cars.id WHERE drives.car_id = $car_id AND distance BETWEEN 1 AND 10\n) S1 GROUP BY temperature ORDER BY temperature ASC\n",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        },
        {
          "datasource": {
            "type": "postgres",
            "uid": "PC98BA2F4D77E1A42"
          },
          "editorMode": "code",
          "format": "table",
          "hide": false,
          "rawQuery": true,
          "rawSql": "SELECT \n  temperature AS temperature2, AVG(consumption) AS consumption2\nfrom (\n  SELECT \n    ROUND(outside_temp_avg/3) * 3 AS temperature, \n    (NULLIF(GREATEST(start_rated_range_km - end_rated_range_km, 0), 0)*cars.efficiency * (100/distance)) AS consumption\n  FROM \n    drives JOIN cars ON drives.car_id = cars.id WHERE drives.car_id = $car_id AND distance BETWEEN 10 AND 40\n) S1 GROUP BY temperature ORDER BY temperature ASC",
          "refId": "B",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        },
        {
          "datasource": {
            "type": "postgres",
            "uid": "PC98BA2F4D77E1A42"
          },
          "editorMode": "code",
          "format": "table",
          "hide": false,
          "rawQuery": true,
          "rawSql": "SELECT \n  temperature AS temperature3, AVG(consumption) AS consumption3\nfrom (\n  SELECT \n    ROUND(outside_temp_avg/3) * 3 AS temperature, \n    (NULLIF(GREATEST(start_rated_range_km - end_rated_range_km, 0), 0)*cars.efficiency * (100/distance)) AS consumption\n  FROM \n    drives JOIN cars ON drives.car_id = cars.id WHERE drives.car_id = $car_id AND distance > 40 \n) S1 GROUP BY temperature ORDER BY temperature ASC",
          "refId": "C",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Short and long trip consumption at temperature",
      "type": "xychart"
    },
    {
      "datasource": {
        "type": "postgres",
        "uid": "PC98BA2F4D77E1A42"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "light-yellow",
            "mode": "fixed",
            "seriesBy": "last"
          },
          "custom": {
            "axisCenteredZero": true,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "left",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 25,
            "gradientMode": "scheme",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "smooth",
            "lineStyle": {
              "fill": "solid"
            },
            "lineWidth": 2,
            "pointSize": 3,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "decimals": 0,
          "mappings": [],
          "max": 35,
          "min": -25,
          "noValue": "0",
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "dark-blue"
              },
              {
                "color": "#EAB839",
                "value": 0
              },
              {
                "color": "orange",
                "value": 10
              }
            ]
          },
          "unit": "kwatth"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "consumption"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "dark-green",
                  "mode": "fixed"
                }
              },
              {
                "id": "custom.lineWidth",
                "value": 4
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "temperature"
            },
            "properties": [
              {
                "id": "unit",
                "value": "celsius"
              },
              {
                "id": "custom.axisPlacement",
                "value": "right"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 13,
        "w": 15,
        "x": 9,
        "y": 43
      },
      "id": 23,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "postgres",
            "uid": "PC98BA2F4D77E1A42"
          },
          "editorMode": "code",
          "format": "table",
          "rawQuery": true,
          "rawSql": "SELECT \n  start_date::date AS time,\n  consumption/(distance/100) AS consumption\nFROM (\n  SELECT \n    start_date,\n    SUM(distance*consumption/100) OVER(ORDER BY start_date ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING) AS consumption,\n    SUM(distance) OVER(ORDER BY start_date ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING) AS distance\n  FROM (\n    SELECT \n      start_date, SUM(distance) AS distance, \n      SUM(distance*consumption)/SUM(distance) AS consumption\n    FROM (\n      SELECT \n        TO_CHAR(start_date, 'YYYY-MM-DD') AS start_date,\n        (end_km-start_km) AS distance,\n        (NULLIF(GREATEST(start_rated_range_km - end_rated_range_km, 0), 0)*cars.efficiency * (100/distance)) AS consumption\n      FROM \n        drives JOIN cars ON drives.car_id = cars.id  WHERE drives.car_id = 1 \n    ) S1 WHERE consumption > 0 GROUP BY start_date ORDER BY start_date ASC\n  ) S2 GROUP BY start_date, distance, consumption ORDER BY start_date\n) S3 ORDER BY start_date",
          "refId": "A",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        },
        {
          "datasource": {
            "type": "postgres",
            "uid": "PC98BA2F4D77E1A42"
          },
          "editorMode": "code",
          "format": "table",
          "hide": false,
          "rawQuery": true,
          "rawSql": "SELECT \n  start_date::date as time,\n  round(temperature, 1) as temperature\nFROM (\n  SELECT \n    start_date,\n    AVG(temperature) OVER(ORDER BY start_date ROWS BETWEEN 1 PRECEDING AND 1 FOLLOWING) AS temperature\n  FROM (\n    SELECT \n      start_date, avg(temperature) as temperature\n    FROM \n      (\n        SELECT \n          to_char(start_date, 'YYYY-MM-DD') as start_date,\n          --(end_km-start_km) as distance,\n          outside_temp_avg as temperature\n        FROM \n          drives join cars on drives.car_id = cars.id  where drives.car_id = 1 \n      ) S1 group by start_date order by start_date asc\n  ) S2 group by start_date, temperature order by start_date\n) S3 order by start_date",
          "refId": "B",
          "sql": {
            "columns": [
              {
                "parameters": [],
                "type": "function"
              }
            ],
            "groupBy": [
              {
                "property": {
                  "type": "string"
                },
                "type": "groupBy"
              }
            ],
            "limit": 50
          }
        }
      ],
      "title": "Consumption and temperature by date (filterable)",
      "type": "timeseries"
    }
  ],
  "refresh": "",
  "schemaVersion": 38,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": [
      {
        "current": {
          "selected": false,
          "text": "133.00019219680954",
          "value": "133.00019219680954"
        },
        "datasource": {
          "type": "postgres",
          "uid": "PC98BA2F4D77E1A42"
        },
        "definition": "SELECT MIN(consumption) as \"Lowest consumption\" FROM (SELECT speed, AVG(power) / speed * 1000 AS consumption  FROM positions GROUP BY speed HAVING speed > 10) AS foo",
        "hide": 2,
        "includeAll": false,
        "multi": false,
        "name": "min_consumption",
        "options": [],
        "query": "SELECT MIN(consumption) as \"Lowest consumption\" FROM (SELECT speed, AVG(power) / speed * 1000 AS consumption  FROM positions GROUP BY speed HAVING speed > 10) AS foo",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {},
        "datasource": {
          "type": "postgres",
          "uid": "PC98BA2F4D77E1A42"
        },
        "definition": "SELECT AVG(Capacity) AS CurrentCapacity FROM\n  (SELECT (100.0 * cp.charge_energy_added) / (GREATEST(1,MAX(usable_battery_level) - MIN(usable_battery_level))) AS Capacity\t\n    FROM charging_processes cp\n\t  INNER JOIN charges c\tON cp.id = c.charging_process_id\n    INNER JOIN aux ON cp.car_id = aux.car_id\n\t  WHERE cp.car_id = $car_id AND cp.charge_energy_added >= aux.rated_efficiency AND cp.end_date >= date_trunc('month', current_date - interval '1 month') \n    GROUP BY  cp.charge_energy_added, cp.end_date\n  ) ",
        "hide": 2,
        "includeAll": false,
        "multi": false,
        "name": "current_capacity",
        "options": [],
        "query": "SELECT AVG(Capacity) AS CurrentCapacity FROM\n  (SELECT (100.0 * cp.charge_energy_added) / (GREATEST(1,MAX(usable_battery_level) - MIN(usable_battery_level))) AS Capacity\t\n    FROM charging_processes cp\n\t  INNER JOIN charges c\tON cp.id = c.charging_process_id\n    INNER JOIN aux ON cp.car_id = aux.car_id\n\t  WHERE cp.car_id = $car_id AND cp.charge_energy_added >= aux.rated_efficiency AND cp.end_date >= date_trunc('month', current_date - interval '1 month') \n    GROUP BY  cp.charge_energy_added, cp.end_date\n  ) ",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {
          "selected": false,
          "text": "Capykaara",
          "value": "1"
        },
        "datasource": {
          "type": "postgres",
          "uid": "PC98BA2F4D77E1A42"
        },
        "definition": "SELECT name AS __text, id AS __value FROM cars ORDER BY display_priority ASC, name ASC;",
        "hide": 0,
        "includeAll": false,
        "multi": false,
        "name": "car_id",
        "options": [],
        "query": "SELECT name AS __text, id AS __value FROM cars ORDER BY display_priority ASC, name ASC;",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {
          "selected": false,
          "text": "km",
          "value": "km"
        },
        "datasource": {
          "type": "postgres",
          "uid": "PC98BA2F4D77E1A42"
        },
        "definition": "select unit_of_length from settings limit 1;",
        "hide": 2,
        "includeAll": false,
        "multi": false,
        "name": "length_unit",
        "options": [],
        "query": "select unit_of_length from settings limit 1;",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {
          "selected": false,
          "text": "http://teslamate.home.arpa",
          "value": "http://teslamate.home.arpa"
        },
        "datasource": {
          "type": "postgres",
          "uid": "PC98BA2F4D77E1A42"
        },
        "definition": "select base_url from settings limit 1;",
        "hide": 2,
        "includeAll": false,
        "multi": false,
        "name": "base_url",
        "options": [],
        "query": "select base_url from settings limit 1;",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {
          "selected": false,
          "text": "{\"LastChargekWhAdded\": 4.84, \"LastMileageAdded\" : 36.20, \"MaxRange\": 419.4718065969537000, \"CurrentRange\": 417.5540927303949600, \"MaxCapacity\": 58.18664634146341, \"CurrentCapacity\": 57.2511511440795427, \"RatedEfficiency\": 13.370165745856353591000}",
          "value": "{\"LastChargekWhAdded\": 4.84, \"LastMileageAdded\" : 36.20, \"MaxRange\": 419.4718065969537000, \"CurrentRange\": 417.5540927303949600, \"MaxCapacity\": 58.18664634146341, \"CurrentCapacity\": 57.2511511440795427, \"RatedEfficiency\": 13.370165745856353591000}"
        },
        "datasource": {
          "type": "postgres",
          "uid": "PC98BA2F4D77E1A42"
        },
        "definition": "-- CONCATENATED JOIN QUERIES TO IMPROVE PERFORMANCE\nWITH\naux\tAS\n(\n\tSELECT cp.charge_energy_added,\n\t\tcp.car_id, cp.charge_energy_added / (cp.end_rated_range_km - cp.start_rated_range_km) * 100.0 AS rated_efficiency,\n\t\t(cp.end_rated_range_km - cp.start_rated_range_km) AS added_range_km\n\tFROM charging_processes cp\n\t\tJOIN (SELECT charging_process_id, MAX(date) as date\n\t\tFROM charges\n\t\tGROUP BY charging_process_id) AS last_charges\n\t\tON cp.id = last_charges.charging_process_id\n\t\tINNER JOIN charges c\n\t\tON c.charging_process_id = cp.id AND c.date = last_charges.date\n\tWHERE cp.car_id = $car_id\n\t\tAND cp.end_date IS NOT NULL\n\t\tAND cp.end_rated_range_km > cp.start_rated_range_km\n\tORDER BY cp.end_date DESC \n\tLIMIT 1\n),  \nCurrentCapacity\t AS\n(\n\tSELECT AVG(Capacity) AS CurrentCapacity FROM\n  (SELECT (100.0 * cp.charge_energy_added) / (GREATEST(1,MAX(usable_battery_level) - MIN(usable_battery_level))) AS Capacity\t\n    FROM charging_processes cp\n\t  INNER JOIN charges c\tON cp.id = c.charging_process_id\n    INNER JOIN aux ON cp.car_id = aux.car_id\n\t  WHERE cp.car_id = $car_id AND cp.charge_energy_added >= aux.rated_efficiency AND cp.end_date >= date_trunc('month', current_date - interval '1 month') \n    GROUP BY  cp.charge_energy_added, cp.end_date\n  ) AS lastEstimatedCapacity\n), \nMaxCapacity AS\n(\n\tSELECT MAX(c.rated_battery_range_km * cars.efficiency * 100.0 / c.usable_battery_level) AS MaxCapacity\n\tFROM charging_processes cp\n\t\tJOIN (SELECT charging_process_id, MAX(date) as date\n\t\tFROM charges\n\t\tGROUP BY charging_process_id) AS last_charges\n\t\tON cp.id = last_charges.charging_process_id\n\t\tINNER JOIN charges c\n\t\tON c.charging_process_id = cp.id AND c.date = last_charges.date\n\t\tINNER JOIN cars ON cp.car_id = cars.id\n\tWHERE cp.car_id = $car_id\n\t\tAND cp.end_date IS NOT NULL\n\t\tAND cp.end_rated_range_km > cp.start_rated_range_km\n\t\tAND c.charge_energy_added >= cars. Efficiency\n), \nCurrentRange AS\n(\n    SELECT\n\t\tfloor(extract(epoch from date)/86400)*86400 AS timecurrent,\n\t\tsum(rated_battery_range_km) / sum(usable_battery_level) * 100 AS rated_range_km\n\tFROM (\n\t\tSELECT battery_level, usable_battery_level, date,  rated_battery_range_km from charges c \n\t\tJOIN charging_processes p ON p.id = c.charging_process_id \n\t\tWHERE p.car_id = $car_id AND usable_battery_level IS NOT NULL) AS data\n\tGROUP BY 1\n\tORDER BY 1 DESC\n\tLIMIT 1\n), \nMaxRange AS\n(\n    SELECT\n\t\tfloor(extract(epoch from date)/86400)*86400 AS time,\n\t\tsum(rated_battery_range_km) / sum(usable_battery_level) * 100 AS max_rated_range_km\n\tFROM (\n\t\tSELECT battery_level, usable_battery_level, date,  rated_battery_range_km from charges c \n\t\tJOIN charging_processes p ON p.id = c.charging_process_id \n\t\tWHERE p.car_id = $car_id AND usable_battery_level IS NOT NULL) AS data\n\tGROUP BY 1\n\tORDER BY 2 DESC\n\tLIMIT 1\n) \nSELECT  CONCAT('{\"LastChargekWhAdded\": ', aux.charge_energy_added, \n  ', \"LastMileageAdded\" : ', convert_km(aux.added_range_km,'$length_unit'),\n  ', \"MaxRange\": ', convert_km(MaxRange.max_rated_range_km,'$length_unit'),\n  ', \"CurrentRange\": ',convert_km(CurrentRange.rated_range_km,'$length_unit'),\n  ', \"MaxCapacity\": ', MaxCapacity.MaxCapacity,\n  ', \"CurrentCapacity\": ',CurrentCapacity.CurrentCapacity,\n  ', \"RatedEfficiency\": ',aux.rated_efficiency, '}') \nFROM MaxRange, CurrentRange, Aux, MaxCapacity, CurrentCapacity;\n-- The following query is the result of many tests and hours of work. This panel is for your own personal use. \n-- If you think you can improve it and contribute, please create a pull request and do not take it to your repository, \n-- much less upload it to another repository as if the original idea were yours, nor do you share it on social media\n-- without mentioning the author. Respect the ingenuity and work of others. Cheers!\n-- 16/04/2023\n-- By @jheredianet - Twitter: @juanheredia",
        "hide": 2,
        "includeAll": false,
        "multi": false,
        "name": "aux",
        "options": [],
        "query": "-- CONCATENATED JOIN QUERIES TO IMPROVE PERFORMANCE\nWITH\naux\tAS\n(\n\tSELECT cp.charge_energy_added,\n\t\tcp.car_id, cp.charge_energy_added / (cp.end_rated_range_km - cp.start_rated_range_km) * 100.0 AS rated_efficiency,\n\t\t(cp.end_rated_range_km - cp.start_rated_range_km) AS added_range_km\n\tFROM charging_processes cp\n\t\tJOIN (SELECT charging_process_id, MAX(date) as date\n\t\tFROM charges\n\t\tGROUP BY charging_process_id) AS last_charges\n\t\tON cp.id = last_charges.charging_process_id\n\t\tINNER JOIN charges c\n\t\tON c.charging_process_id = cp.id AND c.date = last_charges.date\n\tWHERE cp.car_id = $car_id\n\t\tAND cp.end_date IS NOT NULL\n\t\tAND cp.end_rated_range_km > cp.start_rated_range_km\n\tORDER BY cp.end_date DESC \n\tLIMIT 1\n),  \nCurrentCapacity\t AS\n(\n\tSELECT AVG(Capacity) AS CurrentCapacity FROM\n  (SELECT (100.0 * cp.charge_energy_added) / (GREATEST(1,MAX(usable_battery_level) - MIN(usable_battery_level))) AS Capacity\t\n    FROM charging_processes cp\n\t  INNER JOIN charges c\tON cp.id = c.charging_process_id\n    INNER JOIN aux ON cp.car_id = aux.car_id\n\t  WHERE cp.car_id = $car_id AND cp.charge_energy_added >= aux.rated_efficiency AND cp.end_date >= date_trunc('month', current_date - interval '1 month') \n    GROUP BY  cp.charge_energy_added, cp.end_date\n  ) AS lastEstimatedCapacity\n), \nMaxCapacity AS\n(\n\tSELECT MAX(c.rated_battery_range_km * cars.efficiency * 100.0 / c.usable_battery_level) AS MaxCapacity\n\tFROM charging_processes cp\n\t\tJOIN (SELECT charging_process_id, MAX(date) as date\n\t\tFROM charges\n\t\tGROUP BY charging_process_id) AS last_charges\n\t\tON cp.id = last_charges.charging_process_id\n\t\tINNER JOIN charges c\n\t\tON c.charging_process_id = cp.id AND c.date = last_charges.date\n\t\tINNER JOIN cars ON cp.car_id = cars.id\n\tWHERE cp.car_id = $car_id\n\t\tAND cp.end_date IS NOT NULL\n\t\tAND cp.end_rated_range_km > cp.start_rated_range_km\n\t\tAND c.charge_energy_added >= cars. Efficiency\n), \nCurrentRange AS\n(\n    SELECT\n\t\tfloor(extract(epoch from date)/86400)*86400 AS timecurrent,\n\t\tsum(rated_battery_range_km) / sum(usable_battery_level) * 100 AS rated_range_km\n\tFROM (\n\t\tSELECT battery_level, usable_battery_level, date,  rated_battery_range_km from charges c \n\t\tJOIN charging_processes p ON p.id = c.charging_process_id \n\t\tWHERE p.car_id = $car_id AND usable_battery_level IS NOT NULL) AS data\n\tGROUP BY 1\n\tORDER BY 1 DESC\n\tLIMIT 1\n), \nMaxRange AS\n(\n    SELECT\n\t\tfloor(extract(epoch from date)/86400)*86400 AS time,\n\t\tsum(rated_battery_range_km) / sum(usable_battery_level) * 100 AS max_rated_range_km\n\tFROM (\n\t\tSELECT battery_level, usable_battery_level, date,  rated_battery_range_km from charges c \n\t\tJOIN charging_processes p ON p.id = c.charging_process_id \n\t\tWHERE p.car_id = $car_id AND usable_battery_level IS NOT NULL) AS data\n\tGROUP BY 1\n\tORDER BY 2 DESC\n\tLIMIT 1\n) \nSELECT  CONCAT('{\"LastChargekWhAdded\": ', aux.charge_energy_added, \n  ', \"LastMileageAdded\" : ', convert_km(aux.added_range_km,'$length_unit'),\n  ', \"MaxRange\": ', convert_km(MaxRange.max_rated_range_km,'$length_unit'),\n  ', \"CurrentRange\": ',convert_km(CurrentRange.rated_range_km,'$length_unit'),\n  ', \"MaxCapacity\": ', MaxCapacity.MaxCapacity,\n  ', \"CurrentCapacity\": ',CurrentCapacity.CurrentCapacity,\n  ', \"RatedEfficiency\": ',aux.rated_efficiency, '}') \nFROM MaxRange, CurrentRange, Aux, MaxCapacity, CurrentCapacity;\n-- The following query is the result of many tests and hours of work. This panel is for your own personal use. \n-- If you think you can improve it and contribute, please create a pull request and do not take it to your repository, \n-- much less upload it to another repository as if the original idea were yours, nor do you share it on social media\n-- without mentioning the author. Respect the ingenuity and work of others. Cheers!\n-- 16/04/2023\n-- By @jheredianet - Twitter: @juanheredia",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      }
    ]
  },
  "time": {
    "from": "now-90d",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "",
  "title": "Speed and temperature",
  "uid": "d9fd88d7-d950-4892-8d03-c82fe7fb59e4",
  "version": 68,
  "weekStart": ""
}
